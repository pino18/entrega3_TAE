addMarkers(lng=datos$LONGITUDE[sample(7804,500)],lat=datos$LATITUDE[sample(7804,500)])
mapa
inf <- which(datos$region==9)
leaflet() %>%
addTiles() %>%
addMarkers(lng=datos$LONGITUDE[inf],lat=datos$LATITUDE[inf])
datos <- datos[-inf,]
ciudades <- table(datos$CITY)
ciudades <- ciudades[which(ciudades>40)]
kable(ciudades,col.names =NULL,caption = "Tabla con las ciudades con más de 40 universidades") %>%
kable_classic() %>%
kable_styling(full_width = F,position = "center")
tipo <- table(datos$CONTROL)
rownames(tipo) <- c("Pública","Privada sin ánimo de lucro","Privada con ánimo de lucro")
kable(tipo,col.names = NULL,caption = "Tipos de Universidades" ) %>%
kable_styling(full_width = F,position = "center") %>%
kable_classic()
base <- select(datos,c("UNITID","INSTNM","CITY","CONTROL","LATITUDE","LONGITUDE","ADM_RATE","SATVR25","SATVR75","SATMT25","SATMT75","SATVRMID","SATMTMID","SAT_AVG"))
sizebase <- data.frame(Filas=nrow(base),Columnas = ncol(base))
kable(sizebase,caption = "Tamaño de los datos") %>%
kable_styling(full_width = F,position = "center") %>%
kable_minimal()
datos_con_informacion <- which(rowSums(is.na(base))<6)
informacion <- base[datos_con_informacion,]
kable(t(colSums(is.na(informacion))),caption = "<strong> Cantidad de vacios por columna </strong>") %>%
kable_minimal() %>%
kable_styling(full_width = F,position = "center") %>%
scroll_box(width = "700px",height = "200px")
informacion <- informacion[-c(which(is.na(informacion$LATITUDE)=="TRUE"),which(is.na(informacion$SATVR25)),which(is.na(informacion$SATVR75))),]  # Eliminando todos los vacios
sizebase <- data.frame(Filas=nrow(informacion),Columnas = ncol(informacion))
kable(sizebase,caption = "Tamaño de los datos") %>%
kable_styling(full_width = F,position = "center") %>%
kable_minimal()
wss <- sapply(4:15,function(k){kmeans(informacion[,5:6], k, nstart = 50, iter.max = 15)$tot.withinss})
plot(4:15,wss,
type = "b", pch = 19, frame = FALSE,
xlab = "Número de Clusters (k)",
ylab = "WSS Total",
main = "Método del Codo", col="forestgreen")
clusters <- kmeans(informacion[,5:6],12)
informacion$cluster <- as.factor(clusters$cluster)
qplot(LONGITUDE,LATITUDE,colour=cluster,data=informacion,xlab = "Longitud",ylab = "Latitud")
clusters$centers
centros <- clusters$centers
View(centros)
centros <- as.data.frame(clusters$centers)
leaflet() %>%
addTiles() %>%
addMarkers(lng=centros$LONGITUDE,lat=centros$LATITUDE)
clusters <- kmeans(informacion[,5:6],40)
leaflet() %>%
addTiles() %>%
addMarkers(lng=centros$LONGITUDE,lat=centros$LATITUDE)
centros <- as.data.frame(clusters$centers)
leaflet() %>%
addTiles() %>%
addMarkers(lng=centros$LONGITUDE,lat=centros$LATITUDE)
clusters <- kmeans(informacion[,5:6],40)
informacion$cluster <- as.factor(clusters$cluster)
qplot(LONGITUDE,LATITUDE,colour=cluster,data=informacion,xlab = "Longitud",ylab = "Latitud")
clusters <- kmeans(informacion[,5:6],12)
informacion$cluster <- as.factor(clusters$cluster)
qplot(LONGITUDE,LATITUDE,colour=cluster,data=informacion,xlab = "Longitud",ylab = "Latitud")
d <- as.data.frame(matrix(NA,nrow=12,ncol=8))
colnames(d) <- colnames(informacion[,c(7:14)])
for (i in 1:12) {
clust <- informacion[informacion$cluster==i,]
d[i,1] <- sum(clust$ADM_RATE)
d[i,2] <- sum(clust$SATVR25)
d[i,3] <- sum(clust$SATVR75)
d[i,4] <- sum(clust$SATMT25)
d[i,5] <- sum(clust$SATMT75)
d[i,6] <- sum(clust$SATVRMID)
d[i,7] <- sum(clust$SATMTMID)
d[i,8] <- sum(clust$SAT_AVG)
}
d$media <- rowMeans(d)
plot(x = 1:12,y = d$media,type = "b",xlab = "Número de grupo",ylab = "Promedio en los puntajes")
centros <- as.data.frame(clusters$centers)
leaflet() %>%
addTiles() %>%
addMarkers(lng=centros$LONGITUDE,lat=centros$LATITUDE)
qplot(LONGITUDE,LATITUDE,colour=cluster,data=informacion,xlab = "Longitud",ylab = "Latitud")
centros <- as.data.frame(clusters$centers)
View(clusters)
leaflet() %>%
addTiles() %>%
addMarkers(lng=centros$LONGITUDE,lat=centros$LATITUDE,popup = 1:12)
addMarkers(lng=centros$LONGITUDE,lat=centros$LATITUDE,popup = c(1:12)
leaflet() %>%
leaflet() %>%
addTiles() %>%
addMarkers(lng=centros$LONGITUDE,lat=centros$LATITUDE,popup = c(1:12))
leaflet() %>%
addTiles() %>%
addMarkers(lng=centros$LONGITUDE,lat=centros$LATITUDE,label=paste("Grupo Número:",c(1:12),"<br>"))
leaflet() %>%
addTiles() %>%
addMarkers(lng=centros$LONGITUDE,lat=centros$LATITUDE,label=paste("Grupo Número:",c(1:12)) )
length(table(informacion$cluster)
)
clusters <- kmeans(informacion[,5:6],50)
informacion$cluster <- as.factor(clusters$cluster)
qplot(LONGITUDE,LATITUDE,colour=cluster,data=informacion,xlab = "Longitud",ylab = "Latitud")
clusters <- kmeans(informacion[,5:6],30)
informacion$cluster <- as.factor(clusters$cluster)
qplot(LONGITUDE,LATITUDE,colour=cluster,data=informacion,xlab = "Longitud",ylab = "Latitud")
d <- as.data.frame(matrix(NA,nrow=length(table(informacion$cluster)),ncol=8))
colnames(d) <- colnames(informacion[,c(7:14)])
for (i in 1:nrow(d)) {
clust <- informacion[informacion$cluster==i,]
d[i,1] <- sum(clust$ADM_RATE)
d[i,2] <- sum(clust$SATVR25)
d[i,3] <- sum(clust$SATVR75)
d[i,4] <- sum(clust$SATMT25)
d[i,5] <- sum(clust$SATMT75)
d[i,6] <- sum(clust$SATVRMID)
d[i,7] <- sum(clust$SATMTMID)
d[i,8] <- sum(clust$SAT_AVG)
}
d$media <- rowMeans(d)
plot(x = 1:length(table(informacion$cluster)),y = d$media,type = "b",xlab = "Número de grupo",ylab = "Promedio en los puntajes")
centros <- as.data.frame(clusters$centers)
leaflet() %>%
addTiles() %>%
addMarkers(lng=centros$LONGITUDE,lat=centros$LATITUDE,label=paste("Grupo Número:",c(1:nrow(d))) )
View(d)
kable(d)
kable(d,caption = "Datos con su respectiva media grupal") %>%
kable_minimal() %>%
kable_styling(position = "center",full_width = F)
plot(x = 1:length(table(informacion$cluster)),y = d$media,type = "b",xlab = "Número de grupo",ylab = "Promedio en los puntajes")
kable(d,caption = "Datos con su respectiva media grupal",row.names = c(1:12)) %>%
kable_minimal() %>%
kable_styling(position = "center",full_width = F)
knitr::opts_chunk$set(echo = FALSE,message = F,warning = F)
library(leaflet)
library(kableExtra)
library(dplyr)
library(factoextra)
library(tidyr)
library(readr)
library(cluster)
library(usmap)
library(ggmap)
datos <- read.csv("CollegeScorecard.csv",na = c("NULL", "PrivacySuppressed"))
size <- data.frame(Filas=nrow(datos),Columnas = ncol(datos))
kable(size,caption = "Tamaño de los datos") %>%
kable_styling(full_width = F,position = "center") %>%
kable_minimal()
set.seed(123)
mapa <- leaflet() %>%
addTiles() %>%
addMarkers(lng=datos$LONGITUDE[sample(7804,500)],lat=datos$LATITUDE[sample(7804,500)])
mapa
inf <- which(datos$region==9)
leaflet() %>%
addTiles() %>%
addMarkers(lng=datos$LONGITUDE[inf],lat=datos$LATITUDE[inf])
datos <- datos[-inf,]
ciudades <- table(datos$CITY)
ciudades <- ciudades[which(ciudades>40)]
kable(ciudades,col.names =NULL,caption = "Tabla con las ciudades con más de 40 universidades") %>%
kable_classic() %>%
kable_styling(full_width = F,position = "center")
tipo <- table(datos$CONTROL)
rownames(tipo) <- c("Pública","Privada sin ánimo de lucro","Privada con ánimo de lucro")
kable(tipo,col.names = NULL,caption = "Tipos de Universidades" ) %>%
kable_styling(full_width = F,position = "center") %>%
kable_classic()
base <- select(datos,c("UNITID","INSTNM","CITY","CONTROL","LATITUDE","LONGITUDE","ADM_RATE","SATVR25","SATVR75","SATMT25","SATMT75","SATVRMID","SATMTMID","SAT_AVG"))
sizebase <- data.frame(Filas=nrow(base),Columnas = ncol(base))
kable(sizebase,caption = "Tamaño de los datos") %>%
kable_styling(full_width = F,position = "center") %>%
kable_minimal()
datos_con_informacion <- which(rowSums(is.na(base))<6)
informacion <- base[datos_con_informacion,]
kable(t(colSums(is.na(informacion))),caption = "<strong> Cantidad de vacios por columna </strong>") %>%
kable_minimal() %>%
kable_styling(full_width = F,position = "center") %>%
scroll_box(width = "700px",height = "200px")
informacion <- informacion[-c(which(is.na(informacion$LATITUDE)=="TRUE"),which(is.na(informacion$SATVR25)),which(is.na(informacion$SATVR75))),]  # Eliminando todos los vacios
sizebase <- data.frame(Filas=nrow(informacion),Columnas = ncol(informacion))
kable(sizebase,caption = "Tamaño de los datos") %>%
kable_styling(full_width = F,position = "center") %>%
kable_minimal()
wss <- sapply(4:15,function(k){kmeans(informacion[,5:6], k, nstart = 50, iter.max = 15)$tot.withinss})
plot(4:15,wss,
type = "b", pch = 19, frame = FALSE,
xlab = "Número de Clusters (k)",
ylab = "WSS Total",
main = "Método del Codo", col="forestgreen")
clusters <- kmeans(informacion[,5:6],12)
informacion$cluster <- as.factor(clusters$cluster)
qplot(LONGITUDE,LATITUDE,colour=cluster,data=informacion,xlab = "Longitud",ylab = "Latitud")
d <- as.data.frame(matrix(NA,nrow=length(table(informacion$cluster)),ncol=8))
colnames(d) <- colnames(informacion[,c(7:14)])
for (i in 1:nrow(d)) {
clust <- informacion[informacion$cluster==i,]
d[i,1] <- sum(clust$ADM_RATE)
d[i,2] <- sum(clust$SATVR25)
d[i,3] <- sum(clust$SATVR75)
d[i,4] <- sum(clust$SATMT25)
d[i,5] <- sum(clust$SATMT75)
d[i,6] <- sum(clust$SATVRMID)
d[i,7] <- sum(clust$SATMTMID)
d[i,8] <- sum(clust$SAT_AVG)
}
d$media <- rowMeans(d)
kable(d,caption = "Datos con su respectiva media grupal",row.names = c(1:12)) %>%
kable_minimal() %>%
kable_styling(position = "center",full_width = F)
kable(d,caption = "Datos con su respectiva media grupal",row.names = paste(c(1:12))) %>%
kable_minimal() %>%
kable_styling(position = "center",full_width = F)
numeros <- c(1:12)
kable(d,caption = "Datos con su respectiva media grupal",row.names = numeros) %>%
kable_minimal() %>%
kable_styling(position = "center",full_width = F)
numeros <-
kable(d,caption = "Datos con su respectiva media grupal",row.names = as.character(c(1:12))) %>%
kable_minimal() %>%
kable_styling(position = "center",full_width = F)
```{r}
d <- as.data.frame(matrix(NA,nrow=length(table(informacion$cluster)),ncol=8))
colnames(d) <- colnames(informacion[,c(7:14)])
for (i in 1:nrow(d)) {
clust <- informacion[informacion$cluster==i,]
d[i,1] <- sum(clust$ADM_RATE)
d[i,2] <- sum(clust$SATVR25)
d[i,3] <- sum(clust$SATVR75)
d[i,4] <- sum(clust$SATMT25)
d[i,5] <- sum(clust$SATMT75)
d[i,6] <- sum(clust$SATVRMID)
d[i,7] <- sum(clust$SATMTMID)
d[i,8] <- sum(clust$SAT_AVG)
}
d$media <- rowMeans(d)
numeros <-
kable(d,caption = "Datos con su respectiva media grupal") %>%
kable_minimal() %>%
kable_styling(position = "center",full_width = F)
numeros <-
kable(d,caption = "Datos con su respectiva media grupal") %>%
kable_minimal() %>%
kable_styling(position = "center",full_width = F)
kable(d,caption = "Datos con su respectiva media grupal",table.attr="style='width:30%;'") %>%
kable_minimal() %>%
kable_styling(position = "center",full_width = F)
View(informacion)
View(datos)
View(informacion)
knitr::opts_chunk$set(echo = FALSE,message = F,warning = F)
library(leaflet)
library(kableExtra)
library(dplyr)
library(factoextra)
library(tidyr)
library(readr)
library(cluster)
datos <- read.csv("CollegeScorecard.csv",na = c("NULL", "PrivacySuppressed"))
size <- data.frame(Filas=nrow(datos),Columnas = ncol(datos))
kable(size,caption = "Tamaño de los datos") %>%
kable_styling(full_width = F,position = "center") %>%
kable_minimal()
set.seed(123)
mapa <- leaflet() %>%
addTiles() %>%
addMarkers(lng=datos$LONGITUDE[sample(7804,500)],lat=datos$LATITUDE[sample(7804,500)])
mapa
inf <- which(datos$region==9)
leaflet() %>%
addTiles() %>%
addMarkers(lng=datos$LONGITUDE[inf],lat=datos$LATITUDE[inf])
datos <- datos[-inf,]
ciudades <- table(datos$CITY)
ciudades <- ciudades[which(ciudades>40)]
kable(ciudades,col.names =NULL,caption = "Tabla con las ciudades con más de 40 universidades") %>%
kable_classic() %>%
kable_styling(full_width = F,position = "center")
tipo <- table(datos$CONTROL)
rownames(tipo) <- c("Pública","Privada sin ánimo de lucro","Privada con ánimo de lucro")
kable(tipo,col.names = NULL,caption = "Tipos de Universidades" ) %>%
kable_styling(full_width = F,position = "center") %>%
kable_classic()
base <- select(datos,c("UNITID","INSTNM","CITY","CONTROL","LATITUDE","LONGITUDE","ADM_RATE","SATVR25","SATVR75","SATMT25","SATMT75","SATVRMID","SATMTMID","SAT_AVG"))
sizebase <- data.frame(Filas=nrow(base),Columnas = ncol(base))
kable(sizebase,caption = "Tamaño de los datos") %>%
kable_styling(full_width = F,position = "center") %>%
kable_minimal()
datos_con_informacion <- which(rowSums(is.na(base))<6)
informacion <- base[datos_con_informacion,]
kable(t(colSums(is.na(informacion))),caption = "<strong> Cantidad de vacios por columna </strong>") %>%
kable_minimal() %>%
kable_styling(full_width = F,position = "center") %>%
scroll_box(width = "700px",height = "200px")
informacion <- informacion[-c(which(is.na(informacion$LATITUDE)=="TRUE"),which(is.na(informacion$SATVR25)),which(is.na(informacion$SATVR75))),]  # Eliminando todos los vacios
sizebase <- data.frame(Filas=nrow(informacion),Columnas = ncol(informacion))
kable(sizebase,caption = "Tamaño de los datos") %>%
kable_styling(full_width = F,position = "center") %>%
kable_minimal()
datos <- informacion[,c(7:14)]
pca <- prcomp(datos,center = TRUE,scale. = TRUE)
summary(pca)
kable(summary(pca))
summary(pca)
pca$rotation
pca$center
summary(pca)
legend("topright", legend=c("Eigenvalue = 1"),
col=c("red"), lty=5, cex=0.6)cumpro <- cumsum(pca$sdev^2 / sum(pca$sdev^2))
screeplot(pca, type = "l", npcs = 15, main = "Screeplot of the first 10 PCs")
abline(h = 1, col="red", lty=5)
screeplot(pca, type = "l", npcs = 15, main = "Screeplot of the first 10 PCs")
abline(h = 1, col="red", lty=5)
legend("topright", legend=c("Eigenvalue = 1"),
col=c("red"), lty=5, cex=0.6)cumpro <- cumsum(pca$sdev^2 / sum(pca$sdev^2))
legend("topright", legend=c("Eigenvalue = 1"),
col=c("red"), lty=5, cex=0.6)cumpro <- cumsum(pca$sdev^2 / sum(pca$sdev^2))
screeplot(pca, type = "l", npcs = 15, main = "Screeplot of the first 10 PCs")
abline(h = 1, col="red", lty=5)
legend("topright", legend=c("Eigenvalue = 1"),
col=c("red"), lty=5, cex=0.6)
plot(x = 1:length(table(informacion$cluster)),y = d$media,type = "b",xlab = "Número de grupo",ylab = "Promedio en los puntajes")
knitr::opts_chunk$set(echo = FALSE,message = F,warning = F)
library(leaflet)
library(kableExtra)
library(dplyr)
library(factoextra)
library(tidyr)
library(readr)
library(cluster)
datos <- read.csv("CollegeScorecard.csv",na = c("NULL", "PrivacySuppressed"))
size <- data.frame(Filas=nrow(datos),Columnas = ncol(datos))
kable(size,caption = "Tamaño de los datos") %>%
kable_styling(full_width = F,position = "center") %>%
kable_minimal()
set.seed(123)
mapa <- leaflet() %>%
addTiles() %>%
addMarkers(lng=datos$LONGITUDE[sample(7804,500)],lat=datos$LATITUDE[sample(7804,500)])
mapa
inf <- which(datos$region==9)
leaflet() %>%
addTiles() %>%
addMarkers(lng=datos$LONGITUDE[inf],lat=datos$LATITUDE[inf])
datos <- datos[-inf,]
ciudades <- table(datos$CITY)
ciudades <- ciudades[which(ciudades>40)]
kable(ciudades,col.names =NULL,caption = "Tabla con las ciudades con más de 40 universidades") %>%
kable_classic() %>%
kable_styling(full_width = F,position = "center")
tipo <- table(datos$CONTROL)
rownames(tipo) <- c("Pública","Privada sin ánimo de lucro","Privada con ánimo de lucro")
kable(tipo,col.names = NULL,caption = "Tipos de Universidades" ) %>%
kable_styling(full_width = F,position = "center") %>%
kable_classic()
base <- select(datos,c("UNITID","INSTNM","CITY","CONTROL","LATITUDE","LONGITUDE","ADM_RATE","SATVR25","SATVR75","SATMT25","SATMT75","SATVRMID","SATMTMID","SAT_AVG"))
sizebase <- data.frame(Filas=nrow(base),Columnas = ncol(base))
kable(sizebase,caption = "Tamaño de los datos") %>%
kable_styling(full_width = F,position = "center") %>%
kable_minimal()
datos_con_informacion <- which(rowSums(is.na(base))<6)
informacion <- base[datos_con_informacion,]
kable(t(colSums(is.na(informacion))),caption = "<strong> Cantidad de vacios por columna </strong>") %>%
kable_minimal() %>%
kable_styling(full_width = F,position = "center") %>%
scroll_box(width = "700px",height = "200px")
informacion <- informacion[-c(which(is.na(informacion$LATITUDE)=="TRUE"),which(is.na(informacion$SATVR25)),which(is.na(informacion$SATVR75))),]  # Eliminando todos los vacios
sizebase <- data.frame(Filas=nrow(informacion),Columnas = ncol(informacion))
kable(sizebase,caption = "Tamaño de los datos") %>%
kable_styling(full_width = F,position = "center") %>%
kable_minimal()
wss <- sapply(4:15,function(k){kmeans(informacion[,5:6], k, nstart = 50, iter.max = 15)$tot.withinss})
plot(4:15,wss,
type = "b", pch = 19, frame = FALSE,
xlab = "Número de Clusters (k)",
ylab = "WSS Total",
main = "Método del Codo", col="forestgreen")
clusters <- kmeans(informacion[,5:6],12)
informacion$cluster <- as.factor(clusters$cluster)
qplot(LONGITUDE,LATITUDE,colour=cluster,data=informacion,xlab = "Longitud",ylab = "Latitud")
d <- as.data.frame(matrix(NA,nrow=length(table(informacion$cluster)),ncol=8))
colnames(d) <- colnames(informacion[,c(7:14)])
for (i in 1:nrow(d)) {
clust <- informacion[informacion$cluster==i,]
d[i,1] <- sum(clust$ADM_RATE)
d[i,2] <- sum(clust$SATVR25)
d[i,3] <- sum(clust$SATVR75)
d[i,4] <- sum(clust$SATMT25)
d[i,5] <- sum(clust$SATMT75)
d[i,6] <- sum(clust$SATVRMID)
d[i,7] <- sum(clust$SATMTMID)
d[i,8] <- sum(clust$SAT_AVG)
}
d$media <- rowMeans(d)
kable(d,caption = "Datos con su respectiva media grupal",table.attr="style='width:30%;'") %>%
kable_minimal() %>%
kable_styling(position = "center",full_width = F)
plot(x = 1:length(table(informacion$cluster)),y = d$media,type = "b",xlab = "Número de grupo",ylab = "Promedio en los puntajes")
which(informacion$cluster==2)
grupo2 <- which(informacion$cluster==2)
View(datos)
table(informacion$CITY[grupo2])
idgrupo2 <- informacion$UNITID[grupo2]
baseidgrupo2 <- which(datos$UNITID==idgrupo2)
baseidgrupo2 <- datos$UNITID==idgrupo2
which(baseidgrupo2==TRUE)
which(baseidgrupo2=="TRUE")
table(baseidgrupo2)
baseidgrupo2 <- c()
for (i in 1:length(idgrupo2)) {
baseidgrupo2[i] <- which(idgrupo2[i]==datos$UNITID)
}
table(datos$STABBR[baseidgrupo2])
kable(table(datos$STABBR[baseidgrupo2]))
kable(t(table(datos$STABBR[baseidgrupo2])))
kable(t(table(datos$STABBR[baseidgrupo2])),caption = "Estados en el grupo 2") %>%
kable_styling(full_width = F) %>%
kable_minimal()
kable(t(table(datos$STABBR[baseidgrupo2])),caption = "<center> Estados en el grupo 2 </center>") %>%
kable_styling(full_width = F) %>%
kable_minimal()
grupo2 <- which(informacion$cluster==2)
idgrupo2 <- informacion$UNITID[grupo2]
baseidgrupo2 <- c()
for (i in 1:length(idgrupo2)) {
baseidgrupo2[i] <- which(idgrupo2[i]==datos$UNITID)
}
grupo6 <- which(informacion$cluster==6)
idgrupo6 <- informacion$UNITID[grupo6]
baseidgrupo6 <- c()
for (i in 1:length(idgrupo6)) {
baseidgrupo2[i] <- which(idgrupo6[i]==datos$UNITID)
}
grupo8 <- which(informacion$cluster==8)
idgrupo8 <- informacion$UNITID[grupo8]
baseidgrupo8 <- c()
for (i in 1:length(idgrupo8)) {
baseidgrupo2[i] <- which(idgrupo8[i]==datos$UNITID)
}
grupo12 <- which(informacion$cluster==12)
idgrupo12 <- informacion$UNITID[grupo12]
baseidgrupo12 <- c()
for (i in 1:length(idgrupo12)) {
baseidgrupo2[i] <- which(idgrupo12[i]==datos$UNITID)
}
kable(t(table(datos$STABBR[baseidgrupo2])),caption = "<center> Estados en el grupo 2 </center>") %>%
kable_styling(full_width = F) %>%
kable_minimal()
kable(t(table(datos$STABBR[baseidgrupo6])),caption = "<center> Estados en el grupo 6 </center>") %>%
kable_styling(full_width = F) %>%
kable_minimal()
kable(t(table(datos$STABBR[baseidgrupo8])),caption = "<center> Estados en el grupo 8 </center>") %>%
kable_styling(full_width = F) %>%
kable_minimal()
kable(t(table(datos$STABBR[baseidgrupo12])),caption = "<center> Estados en el grupo 12 </center>") %>%
kable_styling(full_width = F) %>%
kable_minimal()
grupo12 <- which(informacion$cluster==12)
idgrupo12 <- informacion$UNITID[grupo12]
baseidgrupo12 <- c()
for (i in 1:length(idgrupo12)) {
baseidgrupo2[i] <- which(idgrupo12[i]==datos$UNITID)
}
grupo2 <- which(informacion$cluster==2)
idgrupo2 <- informacion$UNITID[grupo2]
baseidgrupo2 <- c()
for (i in 1:length(idgrupo2)) {
baseidgrupo2[i] <- which(idgrupo2[i]==datos$UNITID)
}
grupo6 <- which(informacion$cluster==6)
idgrupo6 <- informacion$UNITID[grupo6]
baseidgrupo6 <- c()
for (i in 1:length(idgrupo6)) {
baseidgrupo6[i] <- which(idgrupo6[i]==datos$UNITID)
}
grupo8 <- which(informacion$cluster==8)
idgrupo8 <- informacion$UNITID[grupo8]
baseidgrupo8 <- c()
for (i in 1:length(idgrupo8)) {
baseidgrupo8[i] <- which(idgrupo8[i]==datos$UNITID)
}
grupo12 <- which(informacion$cluster==12)
idgrupo12 <- informacion$UNITID[grupo12]
baseidgrupo12 <- c()
for (i in 1:length(idgrupo12)) {
baseidgrupo12[i] <- which(idgrupo12[i]==datos$UNITID)
}
kable(t(table(datos$STABBR[baseidgrupo2])),caption = "<center> Estados en el grupo 2 </center>") %>%
kable_styling(full_width = F) %>%
kable_minimal()
kable(t(table(datos$STABBR[baseidgrupo6])),caption = "<center> Estados en el grupo 6 </center>") %>%
kable_styling(full_width = F) %>%
kable_minimal()
kable(t(table(datos$STABBR[baseidgrupo8])),caption = "<center> Estados en el grupo 8 </center>") %>%
kable_styling(full_width = F) %>%
kable_minimal()
kable(t(table(datos$STABBR[baseidgrupo12])),caption = "<center> Estados en el grupo 12 </center>") %>%
kable_styling(full_width = F) %>%
kable_minimal()
library(usmap)
library(ggplot2)
kable(t(table(datos$STABBR[baseidgrupo2])),caption = "<center> Estados en el grupo 2 </center>") %>%
kable_styling(full_width = F) %>%
kable_minimal()
plot_usmap(include=c("CT","MA","ME","NH","NJ","NY","RI","VT"))+
labs(title = "New England Region")
plot_usmap(include=c("CT","MA","ME","NH","NJ","NY","RI","VT"))+
labs(title = "Grupo 2")
plot_usmap(include=c("CT","MA","ME","NH","NJ","NY","RI","VT"))+
labs(title = "<center> Grupo 2 </center>")
